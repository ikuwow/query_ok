---
version: 2
jobs:
  build:
    working_directory: ~/project
    docker:
      - image: circleci/ruby:2.4.3
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - restore_cache:
          keys:
            - vendor-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - vendor-{{ .Branch }}-
            - vendor-
      - run:
          name: bundle install
          command: bundle install --path=vendor/bundle --jobs=4 --retry=3
      - save_cache:
          key: vendor-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - restore_cache:
          keys:
            - articles-{{ .Branch }}-{{ .Revision }}
            - articles-{{ .Branch }}
            - articles
      - run:
          name: Build static pages
          command: bundle exec middleman build
      - save_cache:
          key: articles-{{ .Branch }}-{{ .Revision }}
          paths:
            - build
      - persist_to_workspace:
          root: ~/project
          paths:
            - vendor/bundle
            - build
            - Gemfile.lock
  deploy:
    working_directory: ~/project
    docker:
      - image: circleci/ruby:2.4.3
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: bundle install
          command: bundle install --path=vendor/bundle
      - run:
          name: Install awscli
          command: |
            sudo apt-get update
            sudo apt-get install -y python-pip python-dev
            sudo pip install awscli --upgrade
            aws configure set preview.cloudfront true
      - run:
          name: deploy to s3
          command: bundle exec middleman s3_sync
      - run:
          name: Invalidate Cloudfront Caches
          command: |
            echo "Distribution ID: ${CLOUDFRONT_DISTRIBUTION_ID}"
            aws cloudfront create-invalidation \
              --distribution-id $CLOUDFRONT_DISTRIBUTION_ID \
              --paths /
  bundle_update_and_commit:
    workind_directory: ~/project
    docker:
      - image: circleci/ruby:2.4.3
    steps:
      - checkout
      - restore_cache:
          keys:
            - vendor-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - vendor-{{ .Branch }}-
            - vendor-
      - run:
          name: Bundle Update
          command: bundle update
      - run:
          name: Check if build succeed
          command: bundle exec middleman build
      - run:
          name: check and commit Gemfile.lock changes
          command: |
            if (! $(git status -sb | grep -q Gemfile.lock)); then
              echo 'Nothing to update.'
              exit 0
            fi
            git config --global user.email circleci@ikuwow.com
            git config --global user.name 'CircleCI'
            git add Gemfile.lock
            TITLE='[auto] Bundle update'
            BODY="Generated by circleci $(date)"
            git commit -m "$TITLE" -m "$BODY"
            COMMIT_BRANCH="circileci-bundle-update-$(date +%Y%m%d)-$(git rev-parse --short HEAD)"
            git branch -M $COMMIT_BRANCH
            git push origin $COMMIT_BRANCH
            curl -f --header "Accept: application/vnd.github.v3+json" \
                --data "{\"title\": \"${TITLE}\", \"head\": \"${CIRCLE_PROJECT_USERNAME}:${COMMIT_BRANCH}\", \"base\":\"${CIRCLE_BRANCH}\", \"body\":\"${BODY}\" }" \
              https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/pulls?access_token=${GITHUB_ACCESS_TOKEN}

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          filters:
            branches:
              only:
                - master
          requires:
            - build

  auto_bundle_update:
    triggers:
      - schedule:
          cron: "35 3 * * *"
          filters:
            branches:
              only:
                - auto-bundle-update
    jobs:
      - bundle_update_and_commit

